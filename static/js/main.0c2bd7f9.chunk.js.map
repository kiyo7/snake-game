{"version":3,"sources":["components/Navigation.js","components/Field.js","components/Button.js","components/ManipulationPanel.js","utils/index.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","length","difficulty","onChangeDifficulty","upVisibility","downVisibility","className","onClick","Field","fields","map","row","column","Button","status","onStart","onRestart","onStop","ManipulationPanel","onChange","icon","faArrowLeft","faArrowUp","faArrowDown","faArrowRight","getFoodPosition","fieldSize","excludes","x","Math","floor","random","y","some","item","initFields","snake","i","cols","Array","fill","push","food","console","log","initialPosition","initialValues","Difficulty","GameStatus","Object","freeze","init","playing","suspended","gameover","Direction","up","right","left","down","DirectionKeyCodeMap","37","38","39","40","OppositeDirection","Delta","timer","undefined","unsubscribe","clearInterval","App","useState","setFields","body","setBody","setStatus","direction","setDirection","tick","setTick","setDifficulty","useEffect","setInterval","handleMoving","onChangeDirection","useCallback","newDirection","handleKeyDown","e","keyCode","document","addEventListener","removeEventListener","delta","newPosition","position","isCollision","isEatingMySelf","newBody","removingTrack","pop","unshift","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0c2bd7f9.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Navigation = ({ length, difficulty = 3, onChangeDifficulty }) => {\n  const upVisibility = difficulty < 5 ? \"\" : \"is-hidden\";\n  const downVisibility = difficulty > 1 ? \"\" : \"is-hidden\";\n  const onUpDifficulty = () => onChangeDifficulty(difficulty + 1);\n  const onDownDifficulty = () => onChangeDifficulty(difficulty - 1);\n  return (\n    <div className=\"navigation\">\n      <div className=\"navigation-item\">\n        <span className=\"navigation-label\">Length: </span>\n        <div className=\"navigation-item-number-container\">\n          <div className=\"num-board\">{length}</div>\n        </div>\n      </div>\n      <div className=\"navigation-item\">\n        <span className=\"navigation-label\">Difficulty: </span>\n        <div className=\"navigation-item-number-container\">\n          <span className=\"num-board\">{difficulty}</span>\n          <div className=\"difficulty-button-container\"></div>\n          <div\n            className={`difficulty-button difficulty-up ${upVisibility}`}\n            onClick={onUpDifficulty}\n          ></div>\n          <div\n            className={`difficulty-button difficulty-down ${downVisibility}`}\n            onClick={onDownDifficulty}\n          ></div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Navigation;\n","import React from \"react\";\n\nconst Field = ({ fields }) => {\n  //fieldは全体 35 * 35\n  return (\n    <div className=\"field\">\n      {fields.map((row) => {\n        //rowは一列 35個\n        return row.map((column) => {\n          //columnはrowから1つずつとクラスを与える\n          return <div className={`dots ${column}`}></div>;\n        });\n      })}\n    </div>\n  );\n};\n\nexport default Field;\n","import React from \"react\";\nconst Button = ({ status, onStart, onRestart, onStop }) => {\n  return (\n    <div className=\"button\">\n      {status === \"gameover\" && (\n        <button className=\"btn btn-gameover\" onClick={onRestart}>\n          gameover\n        </button>\n      )}\n      {status === \"init\" && (\n        <button className=\"btn btn-init\" onClick={onStart}>\n          start\n        </button>\n      )}\n      {status === \"suspended\" && (\n        <button className=\"btn btn-suspended\" onClick={onStart}>\n          start\n        </button>\n      )}\n      {status === \"playing\" && (\n        <button className=\"btn btn-playing\" onClick={onStop}>\n          stop\n        </button>\n      )}\n    </div>\n    //if文の書き方 &&の前が条件式 trueの時に&&以降が実行される\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faArrowLeft,\n  faArrowUp,\n  faArrowDown,\n  faArrowRight,\n} from \"@fortawesome/free-solid-svg-icons\";\nconst ManipulationPanel = ({ onChange }) => {\n  const onUp = () => onChange(\"up\");\n  const onRight = () => onChange(\"right\");\n  const onLeft = () => onChange(\"left\");\n  const onDown = () => onChange(\"down\");\n\n  return (\n    <div className=\"manipulationPanel\">\n      <button className=\"manipulation-btn btn btn-left\" onClick={onLeft}>\n        <FontAwesomeIcon icon={faArrowLeft} />\n      </button>\n      <div>\n        <button className=\"manipulation-btn btn btn-up\" onClick={onUp}>\n          <FontAwesomeIcon icon={faArrowUp} />\n        </button>\n        <button className=\"manipulation-btn btn btn-down\" onClick={onDown}>\n          <FontAwesomeIcon icon={faArrowDown} />\n        </button>\n      </div>\n\n      <button className=\"manipulation-btn btn btn-right\" onClick={onRight}>\n        <FontAwesomeIcon icon={faArrowRight} />\n      </button>\n    </div>\n  );\n};\n\nexport default ManipulationPanel;\n","export const getFoodPosition = (fieldSize, excludes) => {\n  //餌をランダムな場所に出現させる\n\n  while (true) {\n    const x = Math.floor(Math.random() * (fieldSize - 1 - 1)) + 1;\n    const y = Math.floor(Math.random() * (fieldSize - 1 - 1)) + 1;\n    const conflict = excludes.some((item) => item.x === x && item.y === y);\n\n    if (!conflict) {\n      return { x, y };\n    }\n  }\n};\nexport const initFields = (fieldSize, snake) => {\n  //fieldを作る\n  const fields = [];\n  for (let i = 0; i < fieldSize; i++) {\n    const cols = new Array(fieldSize).fill(\"\");\n    fields.push(cols);\n  }\n  fields[snake.x][snake.y] = \"snake\";\n  const food = getFoodPosition(fieldSize, [snake]);\n  console.log(food);\n  fields[food.y][food.x] = \"food\";\n\n  return fields;\n};\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport Navigation from \"./components/Navigation\";\nimport Field from \"./components/Field\";\nimport Button from \"./components/Button\";\nimport ManipulationPanel from \"./components/ManipulationPanel\";\nimport { initFields, getFoodPosition } from \"./utils/index\";\n\nconst fieldSize = 35;\nconst initialPosition = { x: 17, y: 17 };\nconst initialValues = initFields(fieldSize, initialPosition); //初期値\nconst defaultInterval = 100;\nconst defaultDifficulty = 3;\nconst Difficulty = [1000, 500, 100, 50, 10];\n\n//オブジェクトで色々定義\nconst GameStatus = Object.freeze({\n  init: \"init\",\n  playing: \"playing\",\n  suspended: \"suspended\",\n  gameover: \"gameover\",\n});\n\nconst Direction = Object.freeze({\n  up: \"up\",\n  right: \"right\",\n  left: \"left\",\n  down: \"down\",\n});\n\nconst DirectionKeyCodeMap = Object.freeze({\n  37: Direction.left,\n  38: Direction.up,\n  39: Direction.right,\n  40: Direction.down,\n});\n\nconst OppositeDirection = Object.freeze({\n  up: \"down\",\n  right: \"left\",\n  left: \"right\",\n  down: \"up\",\n});\n//それぞれの方向に進めるようにする\nconst Delta = Object.freeze({\n  up: { x: 0, y: -1 },\n  right: { x: 1, y: 0 },\n  left: { x: -1, y: 0 },\n  down: { x: 0, y: 1 },\n});\n\nlet timer = undefined;\n\nconst unsubscribe = () => {\n  if (!timer) {\n    return;\n  }\n  clearInterval(timer); //タイマーの削除\n};\n\n//壁に当たったかの判定 マイナスor FieldSizeを超える場合\nconst isCollision = (fieldSize, position) => {\n  if (position.y < 0 || position.x < 0) {\n    return true;\n  }\n\n  if (position.y > fieldSize - 1 || position.x > fieldSize - 1) {\n    return true;\n  }\n  return false;\n};\n\nconst isEatingMySelf = (fields, position) => {\n  return fields[position.y][position.x] === \"snake\";\n};\n\nfunction App() {\n  const [fields, setFields] = useState(initialValues); //初期値を代入\n  const [body, setBody] = useState([]);\n  const [status, setStatus] = useState(GameStatus.init);\n  const [direction, setDirection] = useState(Direction.up);\n  const [tick, setTick] = useState(0);\n  const [difficulty, setDifficulty] = useState(defaultDifficulty);\n\n  useEffect(() => {\n    setBody([initialPosition]); // positionの初期値を初回レンダリング時に設定\n    const interval = Difficulty[difficulty - 1];\n    timer = setInterval(() => {\n      // ゲームの中の時間を管理する\n      setTick((tick) => tick + 1);\n    }, interval);\n    return unsubscribe; //コンポーネントが消えるタイミングで実行（今回は、サイトが更新された時）\n  }, [difficulty]);\n\n  useEffect(() => {\n    if (body.length === 0 || status !== GameStatus.playing) {\n      //スネークの長さが0,stateがplaying意外ならreturn\n      return;\n    }\n    const canContinue = handleMoving();\n    if (!canContinue) {\n      setStatus(GameStatus.gameover);\n    }\n  }, [tick]);\n  // console.log(status); //tickを使い常にゲームの状態を把握している 同行のconsoleで見たら理解できる\n\n  const onStart = () => setStatus(GameStatus.playing); // initからplayingへ\n\n  const onStop = () => setStatus(GameStatus.suspended); //一時停止\n\n  //GameOver時のリセット処理\n  const onRestart = () => {\n    timer = setInterval(() => {\n      setTick((tick) => tick + 1);\n    }, defaultInterval);\n    setDirection(Direction.up);\n    setStatus(GameStatus.init);\n    setBody([initialPosition]);\n    setFields(initFields(35, initialPosition));\n  };\n\n  //パフォーマンス向上のためのuseCallback レンダー毎に読み込むのではなく第2引数の[direction, status]に変更があった時のみ関数を読み込む\n  const onChangeDirection = useCallback(\n    (newDirection) => {\n      if (status !== GameStatus.playing) {\n        return direction;\n      }\n      // console.log(direction); //console 進んでいた方向\n      // console.log(newDirection); // console 次に入力された方向\n      if (OppositeDirection[direction] === newDirection) {\n        //オブジェクトには[]でもアクセス可能\n        //例：upならOppositeはdownこの例では左辺はdown 次に入力された方向がdownなら無効 進行方向の逆は入力できないって感じ\n        return;\n      }\n      setDirection(newDirection);\n    },\n    [direction, status]\n  );\n\n  const onChangeDifficulty = useCallback(\n    (difficulty) => {\n      if (status !== GameStatus.init) {\n        //難易度の変更はinit時のみ受付\n        return;\n      }\n      if (difficulty < 1 || difficulty > Difficulty.length) {\n        return;\n      }\n      setDifficulty(difficulty);\n    },\n    [status, difficulty]\n  );\n\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      const newDirection = DirectionKeyCodeMap[e.keyCode];\n      console.log(newDirection);\n      if (!newDirection) {\n        //カーソル以外のキーはundefindを返す\n        return;\n      }\n      onChangeDirection(newDirection);\n    };\n    document.addEventListener(\"keydown\", handleKeyDown);\n    return () => document.removeEventListener(\"keydown\", handleKeyDown); //パフォーマンス向上のためコンポーネントが死んだ時イベントリスナを解除する\n  }, [onChangeDirection]);\n\n  const handleMoving = () => {\n    const { x, y } = body[0]; //bodyはスネークの長さ\n    const delta = Delta[direction];\n    const newPosition = {\n      x: x + delta.x,\n      y: y + delta.y,\n    };\n    if (\n      isCollision(fields.length, newPosition) ||\n      isEatingMySelf(fields, newPosition)\n    ) {\n      //GameOverかの確認\n      return false;\n    }\n    const newBody = [...body]; //破壊的変更を加える前にコピーをとる\n    if (fields[newPosition.y][newPosition.x] !== \"food\") {\n      const removingTrack = newBody.pop();\n      fields[removingTrack.y][removingTrack.x] = \"\";\n    } else {\n      const food = getFoodPosition(fields.length, [...newBody, newPosition]);\n      fields[food.y][food.x] = \"food\"; //2回目以降の餌を出現させる\n    }\n    fields[newPosition.y][newPosition.x] = \"snake\"; //スネークの長さを増やす\n    newBody.unshift(newPosition); //配列の先頭にスネークを加える（破壊的変更）\n    setBody(newBody);\n    setFields(fields);\n    return true;\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <div className=\"title-container\">\n          <h1 className=\"title\">Snake Game</h1>\n        </div>\n        <Navigation\n          length={body.length}\n          difficulty={difficulty}\n          onChangeDifficulty={onChangeDifficulty}\n        />\n      </header>\n      <main className=\"main\">\n        <Field fields={fields} />\n      </main>\n\n      <footer className=\"footer\">\n        <Button\n          status={status}\n          onStart={onStart}\n          onRestart={onRestart}\n          onStop={onStop}\n        />\n        <ManipulationPanel onChange={onChangeDirection} />\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}